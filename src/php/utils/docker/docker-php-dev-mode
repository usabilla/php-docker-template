#!/bin/sh
set -e

usage() {
	echo "usage: $0 COMMAND"
	echo
	echo "Turns PHP into development mode."
	echo "There's no option to revert it since this should only be executed for dev images or runtime debugging."
	echo
	echo "Commands:"
	echo "   xdebug  downloads, installs and enable xdebug in the container"
	echo "   config  adds standard development configuration for PHP"
	echo
}

case "$1" in
	xdebug)
		apkDel=
		if [ -n "$PHPIZE_DEPS" ]; then
			if apk info --installed .phpize-deps-configure > /dev/null; then
				apkDel='.phpize-deps-configure'
			elif ! apk info --installed .phpize-deps > /dev/null; then
				# shellcheck disable=SC2086
				apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS
				apkDel='.phpize-deps'
			fi
		else
			>&2 echo "\$PHPIZE_DEPS env variable is necessary to run this script"
			exit 1
		fi

		# If the php version is >=8.2, then the script installs the 8.2 compatible xdebug release 
		php_version=$(php -r 'echo PHP_VERSION;' | cut -c1-3 | tr -d '\n')
		if [ "$(echo "$php_version >= 8.2" | bc)" = 1 ]; then
			apk add --update linux-headers
			pecl install xdebug-3.2.0RC1
		else
			pecl install xdebug-stable || pecl install xdebug-2.9.8
		fi

		docker-php-ext-enable xdebug
		apk del $apkDel

		cp /usr/local/etc/php/conf.d/available/xdebug.ini /usr/local/etc/php/conf.d/zzz_xdebug.ini
		;;

	config)
		if [ -f "${PHP_INI_DIR:?"The env variable PHP_INI_DIR must be set to run this script"}/php.ini-development" ]; then
			# Override the configuration to symlink to the recommended development configuration
			# ref: https://github.com/docker-library/docs/tree/master/php#configuration
			ln -sf "$PHP_INI_DIR"/php.ini-development "$PHP_INI_DIR"/php.ini
		else
			>&2 echo "Could not configure php.ini, since the \"php.ini-development\" file does not exist"
			exit 1
		fi

		cp /usr/local/etc/php/conf.d/available/dev.ini /usr/local/etc/php/conf.d/zzz_dev.ini
		;;

	*)
		usage
		exit 1
		;;
esac
